{"version":3,"sources":["components/snippet/snippet.js","components/masonry/masonry.js","gists/css.js","App.js","index.js"],"names":["Snippet","snippet","language","className","name","descr","content","map","line","i","key","Masonry","snippets","css","App","ReactDOM","render","document","getElementById"],"mappings":"+NAgBeA,G,UAdC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,SAAZ,OACd,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,cAAcF,EAAQG,MACrC,yBAAKD,UAAU,cAAcF,EAAQI,OACrC,yBAAKF,UAAS,uBAAkBD,EAAlB,aACXD,EAAQK,QAAQC,KAAI,SAACC,EAAMC,GAC1B,OACA,0BAAMC,IAAKD,GAAID,UCKRG,EATC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUV,EAAb,EAAaA,SAAb,OACd,oCACE,4BAAKA,GACL,6BAASC,UAAS,kBAAaD,EAAb,aACfU,EAASL,KAAI,SAAAN,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAASC,SAAUA,EAAUQ,IAAKT,EAAQG,aCT9ES,EAAM,CACjB,CACET,KAAM,cACNC,MAAO,+CACPC,QAAS,CACP,MACA,yCACA,MAGJ,CACEF,KAAM,aACNC,MAAO,0CACPC,QAAS,CACP,mBACA,kBACA,kBACA,wBACA,uBACA,IACA,WACA,oBACA,qBACA,OACA,MAGJ,CACEF,KAAM,kBACNC,MAAO,4BACPC,QAAS,CACP,qBACA,0EACA,oCACA,2CACA,qBACA,MAGJ,CACEF,KAAM,WACNC,MAAO,qDACPC,QAAS,CACP,cACA,oDACA,0CACA,mBACA,IACA,gDACA,mCACA,kCACA,mCACA,6BACA,MAGJ,CACEF,KAAM,kBACNC,MAAO,0DACPC,QAAS,CACP,6CACA,yCACA,yCACA,qDACA,IACA,sDACA,oBACA,4BACA,sDACA,iBACA,yCACA,qEACA,4CACA,IACA,iCACA,kEACA,uCACA,uCAGJ,CACEF,KAAM,SACNC,MAAO,mDACPC,QAAS,CACP,wBACA,8BACA,wBACA,IACA,OACA,4BACA,IACA,IACA,yBACA,4BACA,IACA,SACA,4BACA,IACA,IACA,yBACA,kBACA,IACA,SACA,yBACA,MAGJ,CACEF,KAAM,mBACNC,MAAO,qCACPC,QAAS,CACP,wCACA,YACA,0CACA,oBACA,OACA,IACA,IACA,yCACA,YACA,+BACA,+BACA,OACA,MAGJ,CACEF,KAAM,kBACNC,MAAO,kDACPC,QAAS,CACP,iEACA,uBACA,2EACA,yBACA,OACA,MAGJ,CACEF,KAAM,mBACNC,MAAO,uDACPC,QAAS,CACP,KACA,WACA,aACA,iBACA,MAGJ,CACEF,KAAM,kBACNC,MAAO,8DACPC,QAAS,CACP,yBACA,oBACA,MAGJ,CACEF,KAAM,kBACNC,MAAO,sDACPC,QAAS,CACP,gBACA,0BACA,mBACA,MAGJ,CACEF,KAAM,mBACNC,MAAO,iCACPC,QAAS,CACP,oBACA,qCACA,gDACA,MAGJ,CACEF,KAAM,iBACNC,MAAO,oDACPC,QAAS,CACP,QACA,+DACA,MAGJ,CACEF,KAAM,uBACNC,MAAO,sCACPC,QAAS,CACP,MACA,0CACA,kCACA,MAGJ,CACEF,KAAM,cACNC,MAAO,iDACPC,QAAS,CACP,MACA,uBACA,IACA,IACA,MACA,wBACA,MAGJ,CACEF,KAAM,eACNC,MAAO,qCACPC,QAAS,CACP,aACA,sBACA,iBACA,6BACA,gCACA,wBACA,uBACA,sBACA,IACA,qBACA,8BACA,yBACA,qBACA,0BACA,oBACA,gCACA,+BACA,oCACA,uCACA,uCACA,OACA,OC5NSQ,EAVH,WACV,OACE,yBAAKX,UAAU,OACb,4BAAQA,UAAU,cAAlB,yBACA,kBAAC,EAAD,CAASD,SAAS,MAAMU,SAAUC,IAClC,kBAAC,EAAD,CAASX,SAAS,QAAQU,SAAUC,MCL1CE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bb1d4117.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Snippet = ({ snippet, language }) => (\n  <div className=\"masonry-card\">\n    <div className=\"card-title\">{snippet.name}</div>\n    <div className=\"card-descr\">{snippet.descr}</div>\n    <pre className={`card-content ${language}-snippet`}>\n      {snippet.content.map((line, i) => {\n        return (\n        <code key={i}>{line}</code>\n        )\n      })}\n    </pre>\n  </div>\n);\n\nexport default Snippet;\n","import React from \"react\";\n\nimport \"./masonry.scss\";\nimport Snippet from \"../snippet\";\n\nconst Masonry = ({ snippets, language }) => (\n  <>\n    <h2>{language}</h2>\n    <section className={`masonry ${language}-masonry`}>\n      {snippets.map(snippet => <Snippet snippet={snippet} language={language} key={snippet.name} />)}\n    </section>\n  </>\n);\n\nexport default Masonry;\n","export const css = [\n  { \n    name: \"drop-shadow\",\n    descr: \"Have a shadow of the exact shape of your div\",\n    content: [\n      \"p {\",\n      \"   filter: drop-shadow(0 0 30px #333);\",\n      \"}\"\n    ]\n  },\n  { \n    name: \"object-fit\",\n    descr: \"Image cover horizontally and vertically\",\n    content: [\n      \".img-container {\",\n      \"   width: 100%;\",\n      \"   height: 25%;\",\n      \"   object-fit: cover;\",\n      \"   overflow: hidden;\",\n      \" \",\n      \"   img {\",\n      \"     width: 100%;\",\n      \"     height: auto;\",\n      \"   }\",\n      \"}\"\n    ]\n  },\n  { \n    name: \"gradient-stroke\",\n    descr: \"Text with gradient stroke\",\n    content: [\n      \".gradient-stroke {\",\n      \"   background: -webkit-linear-gradient(0deg, #5a80ef 3%, #34d5b0 100%);\",\n      \"   -webkit-background-clip: text;\",\n      \"   -webkit-text-stroke: 2px transparent;\",\n      \"   color: #F6FDFF;\",\n      \"}\"\n    ]\n  },\n  { \n    name: \"parallax\",\n    descr: \"Make a parallax on a <div> with a fixed background\",\n    content: [\n      \".parallax {\",\n      \"   /* Set the image used and a specific height */\",\n      \"   background-image: url('/image.jpg');\",\n      \"   height: 70vh;\",\n      \" \",\n      \"   /* Create the parallax scrolling effect */\",\n      \"   background-attachment: fixed;\",\n      \"   background-position: center;\",\n      \"   background-repeat: no-repeat;\",\n      \"   background-size: cover;\",\n      \"}\"\n    ]\n  },\n  { \n    name: \"colors with CSS\",\n    descr: \"Change a picture contrast, saturation or other settings\",\n    content: [\n      \"hue($color)         // → 0deg..360deg\",\n      \"saturation($color)  // → 0%..100%\",\n      \"lightness($color)   // → 0%..100%\",\n      \"alpha($color)       // → 0..1 (aka opacity())\",\n      \" \",\n      \"darken($color, 5%) // lighten, saturate, desaturate\",\n      \"grayscale($color)\",\n      \"adjust-hue($color, 15deg)\",\n      \"complement($color)    // like adjust-hue(_, 180deg)\",\n      \"invert($color)\",\n      \"fade-in($color, .5)   // aka opacify()\",\n      \"fade-out($color, .5)  // aka transparentize() - halves the opacity\",\n      \"rgba($color, .5)      // sets alpha to .5\",\n      \" \",\n      \"adjust-color($color, $blue: 5)\",\n      \"adjust-color($color, $lightness: -30%)   // like darken(_, 30%)\",\n      \"scale-color($color, $lightness: 50%)\",\n      \"change-color($color, $hue: 180deg)\",\n    ]\n  },\n  { \n    name: \"mixins\",\n    descr: \"default / with a variable / with a default value\",\n    content: [\n      \"@mixin heading-font {\",\n      \"   font-family: sans-serif;\",\n      \"   font-weight: bold;\",\n      \"}\",\n      \"h1 {\",\n      \"   @include heading-font;\",\n      \"}\",\n      \" \",\n      \"@mixin font-size($n) {\",\n      \"   font-size: $n * 1.2em;\",\n      \"}\",\n      \"body {\",\n      \"   @include font-size(2);\",\n      \"}\",\n      \" \",\n      \"@mixin pad($n: 10px) {\",\n      \"   padding: $n;\",\n      \"}\",\n      \"body {\",\n      \"   @include pad(15px);\",\n      \"}\"\n    ]\n  },\n  { \n    name: \"detect dark mode\",\n    descr: \"detect light or dark mode from iOs\",\n    content: [\n      \"@media (prefers-color-scheme: dark) {\",\n      \"   body {\",\n      \"     background-color: rgb(32, 32, 32);\",\n      \"     color: #fff;\",\n      \"   }\",\n      \"}\",\n      \" \",\n      \"@media (prefers-color-scheme: light) {\",\n      \"   body {\",\n      \"     color: rgb(32, 32, 32);\",\n      \"     background-color: #fff;\",\n      \"   }\",\n      \"}\",\n    ]\n  },\n  { \n    name: \"feature queries\",\n    descr: \"check if the browser supports a specific webkit\",\n    content: [\n      \"@supports (initial-letter: 4) or (-webkit-initial-letter: 4) {\",\n      \"   p::first-letter {\",\n      \"     -webkit-initial-letter: 4; // initial letter of a height of 4 lines\",\n      \"     initial-letter: 4\",\n      \"   }\",\n      \"}\",\n    ]\n  },\n  { \n    name: \"set outline to 0\",\n    descr: \"hide chrome's blue outline when focusing on an input\",\n    content: [\n      \"*,\",\n      \"::after,\",\n      \"::before {\",\n      \"   outline: 0;\",\n      \"}\",\n    ]\n  },\n  { \n    name: \"hide scrollbars\",\n    descr: \"hide every scrollbars, especially the ugly ones in linux :)\",\n    content: [\n      \"*::-webkit-scrollbar {\",\n      \"   display: none;\",\n      \"}\",\n    ]\n  },\n  { \n    name: \"selection style\",\n    descr: \"change background color and color of text selection\",\n    content: [\n      \"::selection {\",\n      \"   background: #ff388a;\",\n      \"   color: white;\",\n      \"}\",\n    ]\n  },\n  { \n    name: \"text with stroke\",\n    descr: \"transparent text with a stroke\",\n    content: [\n      \".message-stroke {\",\n      \"   -webkit-text-stroke-width: 1px;\",\n      \"   -webkit-text-fill-color: rgba(0, 0, 0, 0);\",\n      \"}\",\n    ]\n  },\n  { \n    name: \"mix-blend-mode\",\n    descr: \"apply fusion mode effects (photoshop-like layers)\",\n    content: [\n      \"div {\",\n      \"   mix-blend-mode: screen; // overlay, darken, saturation...\",\n      \"}\",\n    ]\n  },\n  { \n    name: \"box-decoration-break\",\n    descr: \"fit text decoration exactly to text\",\n    content: [\n      \"p {\",\n      \"   -webkit-box-decoration-break: clone;\",\n      \"   box-decoration-break: clone;\",\n      \"}\",\n    ]\n  },\n  { \n    name: \"user-select\",\n    descr: \"select all text with just ONE click or disable\",\n    content: [\n      \"p {\",\n      \"   user-select: all;\",\n      \"}\",\n      \" \",\n      \"p {\",\n      \"   user-select: none;\",\n      \"}\",\n    ]\n  },\n  { \n    name: \"masonry grid\",\n    descr: \"build a masonry grid with CSS only\",\n    content: [\n      \".masonry {\",\n      \"   margin: 1.5em 0;\",\n      \"   padding: 0;\",\n      \"   -moz-column-gap: 1.5em;\",\n      \"   -webkit-column-gap: 1.5em;\",\n      \"   column-gap: 1.5em;\",\n      \"   font-size: .85em;\",\n      \"   column-count: 3;\",\n      \" \",\n      \"   .masonry-card {\",\n      \"     display: inline-block;\",\n      \"     background: #fff;\",\n      \"     padding: 1em;\",\n      \"     margin: 0 0 1.5em;\",\n      \"     width: 100%;\",\n      \"     transition: 1s ease all;\",\n      \"     box-sizing: border-box;\",\n      \"     -moz-box-sizing: border-box;\",\n      \"     -webkit-box-sizing: border-box;\",\n      \"     box-shadow: 2px 2px 4px 0 #ccc;\",\n      \"   }\",\n      \"}\"\n    ]\n  },\n];\n","import React from \"react\";\n\nimport Masonry from \"./components/masonry\";\nimport { css } from \"./gists/css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">Front-End Cheatsheets</header>\n      <Masonry language=\"css\" snippets={css} />\n      <Masonry language=\"react\" snippets={css} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}